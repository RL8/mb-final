name: Main Deployment Workflow

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'frontend/**'
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
      - '.github/workflows/frontend-ci.yml'
  workflow_dispatch:

jobs:
  trigger-workflows:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Trigger Backend Workflow
      uses: benc-uk/workflow-dispatch@v1
      with:
        workflow: backend-ci.yml
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Trigger Frontend Workflow
      uses: benc-uk/workflow-dispatch@v1
      with:
        workflow: frontend-ci.yml
        token: ${{ secrets.GITHUB_TOKEN }}
  
  deploy-infrastructure:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Install rsync
      run: sudo apt-get update && sudo apt-get install -y rsync
        
    - name: Add SSH key
      run: |
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        # Write the key with proper newlines
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        # Test key format
        ssh-keygen -l -f ~/.ssh/deploy_key || echo "Key format check failed"
        # Configure SSH
        echo -e "Host *\n\tStrictHostKeyChecking no\n\tUserKnownHostsFile=/dev/null" > ~/.ssh/config
        
    - name: Deploy Configuration Files
      run: |
        # Ensure the remote directory exists
        ssh -i ~/.ssh/deploy_key root@${{ secrets.DROPLET_IP }} "mkdir -p /opt/mb-final"
        
        # Copy configuration files to the Droplet
        rsync -avz -e "ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" \
          --include='docker-compose.yml' \
          --include='nginx/' \
          --include='nginx/**' \
          --include='deploy.sh' \
          --include='setup_droplet.sh' \
          --exclude='*' \
          ./ root@${{ secrets.DROPLET_IP }}:/opt/mb-final/
          
        # Make scripts executable
        ssh -i ~/.ssh/deploy_key root@${{ secrets.DROPLET_IP}} "
          cd /opt/mb-final && \
          chmod +x deploy.sh && \
          chmod +x setup_droplet.sh
        "
      
    - name: Verify deployment
      run: |
        echo "Infrastructure deployment complete! Verifying..."
        curl -s http://${{ secrets.DROPLET_IP }}/api/health || echo "API health check failed, may need to wait for backend deployment"
